<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="gcyl.entity.domain.mapper.OrderMapper" >
  <resultMap id="BaseResultMap" type="gcyl.entity.domain.model.Order" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="order_sn" property="orderSn" jdbcType="VARCHAR" />
    <result column="order_state" property="orderState" jdbcType="INTEGER" />
    <result column="is_pay" property="isPay" jdbcType="BIT" />
    <result column="pay_method" property="payMethod" jdbcType="INTEGER" />
    <result column="pay_way" property="payWay" jdbcType="INTEGER" />
    <result column="shop_id" property="shopId" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="table_num" property="tableNum" jdbcType="INTEGER" />
    <result column="consume_amount" property="consumeAmount" jdbcType="DECIMAL" />
    <result column="settle_amount" property="settleAmount" jdbcType="DECIMAL" />
    <result column="deduct_amount" property="deductAmount" jdbcType="DECIMAL" />
    <result column="deduct_method" property="deductMethod" jdbcType="INTEGER" />
    <result column="consumption" property="consumption" jdbcType="DECIMAL" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="person_num" property="personNum" jdbcType="INTEGER" />
    <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
    <result column="gmt_modify" property="gmtModify" jdbcType="TIMESTAMP" />
    <result column="gmt_receive" property="gmtReceive" jdbcType="TIMESTAMP" />
    <result column="gmt_pay" property="gmtPay" jdbcType="TIMESTAMP" />
    <result column="gmt_serving_finish" property="gmtServingFinish" jdbcType="TIMESTAMP" />
    <result column="gmt_finish" property="gmtFinish" jdbcType="TIMESTAMP" />
    <result column="shop_cut_off" property="shopCutOff" jdbcType="BIT" />
    <result column="user_cut_off" property="userCutOff" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, order_sn, order_state, is_pay, pay_method, pay_way, shop_id, user_id, table_num, 
    consume_amount, settle_amount, deduct_amount, deduct_method, consumption, description, 
    person_num, gmt_create, gmt_modify, gmt_receive, gmt_pay, gmt_serving_finish, gmt_finish, 
    shop_cut_off, user_cut_off
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="gcyl.entity.domain.model.OrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tyg_ms_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from tyg_ms_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tyg_ms_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="gcyl.entity.domain.model.OrderExample" >
    delete from tyg_ms_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="gcyl.entity.domain.model.Order" >
    insert into tyg_ms_order (id, order_sn, order_state, 
      is_pay, pay_method, pay_way, 
      shop_id, user_id, table_num, 
      consume_amount, settle_amount, deduct_amount, 
      deduct_method, consumption, description, 
      person_num, gmt_create, gmt_modify, 
      gmt_receive, gmt_pay, gmt_serving_finish, 
      gmt_finish, shop_cut_off, user_cut_off
      )
    values (#{id,jdbcType=BIGINT}, #{orderSn,jdbcType=VARCHAR}, #{orderState,jdbcType=INTEGER}, 
      #{isPay,jdbcType=BIT}, #{payMethod,jdbcType=INTEGER}, #{payWay,jdbcType=INTEGER}, 
      #{shopId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{tableNum,jdbcType=INTEGER}, 
      #{consumeAmount,jdbcType=DECIMAL}, #{settleAmount,jdbcType=DECIMAL}, #{deductAmount,jdbcType=DECIMAL}, 
      #{deductMethod,jdbcType=INTEGER}, #{consumption,jdbcType=DECIMAL}, #{description,jdbcType=VARCHAR}, 
      #{personNum,jdbcType=INTEGER}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModify,jdbcType=TIMESTAMP}, 
      #{gmtReceive,jdbcType=TIMESTAMP}, #{gmtPay,jdbcType=TIMESTAMP}, #{gmtServingFinish,jdbcType=TIMESTAMP}, 
      #{gmtFinish,jdbcType=TIMESTAMP}, #{shopCutOff,jdbcType=BIT}, #{userCutOff,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="gcyl.entity.domain.model.Order" >
    insert into tyg_ms_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderSn != null" >
        order_sn,
      </if>
      <if test="orderState != null" >
        order_state,
      </if>
      <if test="isPay != null" >
        is_pay,
      </if>
      <if test="payMethod != null" >
        pay_method,
      </if>
      <if test="payWay != null" >
        pay_way,
      </if>
      <if test="shopId != null" >
        shop_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="tableNum != null" >
        table_num,
      </if>
      <if test="consumeAmount != null" >
        consume_amount,
      </if>
      <if test="settleAmount != null" >
        settle_amount,
      </if>
      <if test="deductAmount != null" >
        deduct_amount,
      </if>
      <if test="deductMethod != null" >
        deduct_method,
      </if>
      <if test="consumption != null" >
        consumption,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="personNum != null" >
        person_num,
      </if>
      <if test="gmtCreate != null" >
        gmt_create,
      </if>
      <if test="gmtModify != null" >
        gmt_modify,
      </if>
      <if test="gmtReceive != null" >
        gmt_receive,
      </if>
      <if test="gmtPay != null" >
        gmt_pay,
      </if>
      <if test="gmtServingFinish != null" >
        gmt_serving_finish,
      </if>
      <if test="gmtFinish != null" >
        gmt_finish,
      </if>
      <if test="shopCutOff != null" >
        shop_cut_off,
      </if>
      <if test="userCutOff != null" >
        user_cut_off,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderSn != null" >
        #{orderSn,jdbcType=VARCHAR},
      </if>
      <if test="orderState != null" >
        #{orderState,jdbcType=INTEGER},
      </if>
      <if test="isPay != null" >
        #{isPay,jdbcType=BIT},
      </if>
      <if test="payMethod != null" >
        #{payMethod,jdbcType=INTEGER},
      </if>
      <if test="payWay != null" >
        #{payWay,jdbcType=INTEGER},
      </if>
      <if test="shopId != null" >
        #{shopId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="tableNum != null" >
        #{tableNum,jdbcType=INTEGER},
      </if>
      <if test="consumeAmount != null" >
        #{consumeAmount,jdbcType=DECIMAL},
      </if>
      <if test="settleAmount != null" >
        #{settleAmount,jdbcType=DECIMAL},
      </if>
      <if test="deductAmount != null" >
        #{deductAmount,jdbcType=DECIMAL},
      </if>
      <if test="deductMethod != null" >
        #{deductMethod,jdbcType=INTEGER},
      </if>
      <if test="consumption != null" >
        #{consumption,jdbcType=DECIMAL},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="personNum != null" >
        #{personNum,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null" >
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModify != null" >
        #{gmtModify,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtReceive != null" >
        #{gmtReceive,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtPay != null" >
        #{gmtPay,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtServingFinish != null" >
        #{gmtServingFinish,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtFinish != null" >
        #{gmtFinish,jdbcType=TIMESTAMP},
      </if>
      <if test="shopCutOff != null" >
        #{shopCutOff,jdbcType=BIT},
      </if>
      <if test="userCutOff != null" >
        #{userCutOff,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="gcyl.entity.domain.model.OrderExample" resultType="java.lang.Integer" >
    select count(*) from tyg_ms_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tyg_ms_order
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.orderSn != null" >
        order_sn = #{record.orderSn,jdbcType=VARCHAR},
      </if>
      <if test="record.orderState != null" >
        order_state = #{record.orderState,jdbcType=INTEGER},
      </if>
      <if test="record.isPay != null" >
        is_pay = #{record.isPay,jdbcType=BIT},
      </if>
      <if test="record.payMethod != null" >
        pay_method = #{record.payMethod,jdbcType=INTEGER},
      </if>
      <if test="record.payWay != null" >
        pay_way = #{record.payWay,jdbcType=INTEGER},
      </if>
      <if test="record.shopId != null" >
        shop_id = #{record.shopId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.tableNum != null" >
        table_num = #{record.tableNum,jdbcType=INTEGER},
      </if>
      <if test="record.consumeAmount != null" >
        consume_amount = #{record.consumeAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.settleAmount != null" >
        settle_amount = #{record.settleAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.deductAmount != null" >
        deduct_amount = #{record.deductAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.deductMethod != null" >
        deduct_method = #{record.deductMethod,jdbcType=INTEGER},
      </if>
      <if test="record.consumption != null" >
        consumption = #{record.consumption,jdbcType=DECIMAL},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.personNum != null" >
        person_num = #{record.personNum,jdbcType=INTEGER},
      </if>
      <if test="record.gmtCreate != null" >
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModify != null" >
        gmt_modify = #{record.gmtModify,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtReceive != null" >
        gmt_receive = #{record.gmtReceive,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtPay != null" >
        gmt_pay = #{record.gmtPay,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtServingFinish != null" >
        gmt_serving_finish = #{record.gmtServingFinish,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtFinish != null" >
        gmt_finish = #{record.gmtFinish,jdbcType=TIMESTAMP},
      </if>
      <if test="record.shopCutOff != null" >
        shop_cut_off = #{record.shopCutOff,jdbcType=BIT},
      </if>
      <if test="record.userCutOff != null" >
        user_cut_off = #{record.userCutOff,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tyg_ms_order
    set id = #{record.id,jdbcType=BIGINT},
      order_sn = #{record.orderSn,jdbcType=VARCHAR},
      order_state = #{record.orderState,jdbcType=INTEGER},
      is_pay = #{record.isPay,jdbcType=BIT},
      pay_method = #{record.payMethod,jdbcType=INTEGER},
      pay_way = #{record.payWay,jdbcType=INTEGER},
      shop_id = #{record.shopId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      table_num = #{record.tableNum,jdbcType=INTEGER},
      consume_amount = #{record.consumeAmount,jdbcType=DECIMAL},
      settle_amount = #{record.settleAmount,jdbcType=DECIMAL},
      deduct_amount = #{record.deductAmount,jdbcType=DECIMAL},
      deduct_method = #{record.deductMethod,jdbcType=INTEGER},
      consumption = #{record.consumption,jdbcType=DECIMAL},
      description = #{record.description,jdbcType=VARCHAR},
      person_num = #{record.personNum,jdbcType=INTEGER},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modify = #{record.gmtModify,jdbcType=TIMESTAMP},
      gmt_receive = #{record.gmtReceive,jdbcType=TIMESTAMP},
      gmt_pay = #{record.gmtPay,jdbcType=TIMESTAMP},
      gmt_serving_finish = #{record.gmtServingFinish,jdbcType=TIMESTAMP},
      gmt_finish = #{record.gmtFinish,jdbcType=TIMESTAMP},
      shop_cut_off = #{record.shopCutOff,jdbcType=BIT},
      user_cut_off = #{record.userCutOff,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="gcyl.entity.domain.model.Order" >
    update tyg_ms_order
    <set >
      <if test="orderSn != null" >
        order_sn = #{orderSn,jdbcType=VARCHAR},
      </if>
      <if test="orderState != null" >
        order_state = #{orderState,jdbcType=INTEGER},
      </if>
      <if test="isPay != null" >
        is_pay = #{isPay,jdbcType=BIT},
      </if>
      <if test="payMethod != null" >
        pay_method = #{payMethod,jdbcType=INTEGER},
      </if>
      <if test="payWay != null" >
        pay_way = #{payWay,jdbcType=INTEGER},
      </if>
      <if test="shopId != null" >
        shop_id = #{shopId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="tableNum != null" >
        table_num = #{tableNum,jdbcType=INTEGER},
      </if>
      <if test="consumeAmount != null" >
        consume_amount = #{consumeAmount,jdbcType=DECIMAL},
      </if>
      <if test="settleAmount != null" >
        settle_amount = #{settleAmount,jdbcType=DECIMAL},
      </if>
      <if test="deductAmount != null" >
        deduct_amount = #{deductAmount,jdbcType=DECIMAL},
      </if>
      <if test="deductMethod != null" >
        deduct_method = #{deductMethod,jdbcType=INTEGER},
      </if>
      <if test="consumption != null" >
        consumption = #{consumption,jdbcType=DECIMAL},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="personNum != null" >
        person_num = #{personNum,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null" >
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModify != null" >
        gmt_modify = #{gmtModify,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtReceive != null" >
        gmt_receive = #{gmtReceive,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtPay != null" >
        gmt_pay = #{gmtPay,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtServingFinish != null" >
        gmt_serving_finish = #{gmtServingFinish,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtFinish != null" >
        gmt_finish = #{gmtFinish,jdbcType=TIMESTAMP},
      </if>
      <if test="shopCutOff != null" >
        shop_cut_off = #{shopCutOff,jdbcType=BIT},
      </if>
      <if test="userCutOff != null" >
        user_cut_off = #{userCutOff,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="gcyl.entity.domain.model.Order" >
    update tyg_ms_order
    set order_sn = #{orderSn,jdbcType=VARCHAR},
      order_state = #{orderState,jdbcType=INTEGER},
      is_pay = #{isPay,jdbcType=BIT},
      pay_method = #{payMethod,jdbcType=INTEGER},
      pay_way = #{payWay,jdbcType=INTEGER},
      shop_id = #{shopId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      table_num = #{tableNum,jdbcType=INTEGER},
      consume_amount = #{consumeAmount,jdbcType=DECIMAL},
      settle_amount = #{settleAmount,jdbcType=DECIMAL},
      deduct_amount = #{deductAmount,jdbcType=DECIMAL},
      deduct_method = #{deductMethod,jdbcType=INTEGER},
      consumption = #{consumption,jdbcType=DECIMAL},
      description = #{description,jdbcType=VARCHAR},
      person_num = #{personNum,jdbcType=INTEGER},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modify = #{gmtModify,jdbcType=TIMESTAMP},
      gmt_receive = #{gmtReceive,jdbcType=TIMESTAMP},
      gmt_pay = #{gmtPay,jdbcType=TIMESTAMP},
      gmt_serving_finish = #{gmtServingFinish,jdbcType=TIMESTAMP},
      gmt_finish = #{gmtFinish,jdbcType=TIMESTAMP},
      shop_cut_off = #{shopCutOff,jdbcType=BIT},
      user_cut_off = #{userCutOff,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>